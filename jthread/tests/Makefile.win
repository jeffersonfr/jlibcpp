AR			= ar
CC			= g++
JAVA		= javac

DEVCPP 		= c:/Dev-Cpp

TARGET_ARCH = linux

OPT    		= -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -O2
DEBUG  		= -ggdb 
OTHER  		= -Wall  

INCLUDE		= -I. -I../include -I../../jsocket/include -I../../jcommon/include -I../../jio/include -I../win32/include -Iinclude -I$(DEVCPP)/include -I$(DEVCPP)/include -I$(DEVCPP)/include/c++  -I$(DEVCPP)/include/c++/mingw32  -I$(DEVCPP)/include/c++/backward  -I$(DEVCPP)/include 
LIBRARY 		= -L. -L../../lib -L../win32/lib -L$(DEVCPP)/lib -ljlib -lwsock32

STD			= _GNU_SOURCE

CCFLAGS		= $(INCLUDE) $(DEBUG) $(OPT) $(OTHER) -D$(STD)

OBJS_stress = \
	   stress.o\

OBJS_counter = \
		counter.o\

OBJS_mlive = \
		mlive.o\

all: stress counter mlive
	
stress: $(OBJS_stress)
	$(CC) $(CCFLAGS) $(OBJS_stress) -o stress $(LIBRARY)
        
counter: $(OBJS_counter)
	$(CC) $(CCFLAGS) $(OBJS_counter) -o counter $(LIBRARY)
        
mlive: $(OBJS_mlive)
	$(CC) $(CCFLAGS) $(OBJS_mlive) -o mlive $(LIBRARY)
        
.cpp.o: $<  
	$(CC) $(CCFLAGS) -c $< 

install:


clean:
	rm -rvf *.o *~ teste_stress.exe teste_sem.exe
